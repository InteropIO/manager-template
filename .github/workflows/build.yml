name: Build image
on: 
  workflow_dispatch:
    inputs:
      component:
        description: "What component to build"
        required: true
        type: choice
        options:
        - acme-oms
        - wealth-apps
        - start-of-day
      url:
        description: "What URL to deploy to"
        required: true
        type: choice
        options:
        - acme-trial
        - wealth-trial
        - start-of-day
      deploy:
        description: "Deploy after build"
        default: false
        type: boolean
      namespace:
        description: "Namespace in EKS to be deployed"
        required: true
        default: "core-demos"

jobs:
  build:
    runs-on: 
      - lnx-build
    name: Build image
    steps:
      - uses: actions/checkout@v4
      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to ECR
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${{vars.CI_REGISTRY}}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ github.event.inputs.component }}
          file: ./${{ github.event.inputs.component }}/Dockerfile
          push: true
          tags: |
            ${{vars.CI_REGISTRY}}/${{ github.event.repository.name }}/${{ github.event.inputs.component }}:latest
            ${{vars.CI_REGISTRY}}/${{ github.event.repository.name }}/${{ github.event.inputs.component }}:${{ steps.short-sha.outputs.sha }}
          provenance: false
  deploy:
    runs-on: 
      - deploy
    environment: dev
    name: Deploy
    needs: build
    if: inputs.deploy == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          ref: master
          repository: InteropIO/basehelmchart
          path: 'helm'
          sparse-checkout: '*'
          sparse-checkout-cone-mode: false
      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6
      - name: Deploy
        run: |
          helmfile -f helmfile.yaml apply
        env:
          PROJECT_NAME: ${{ github.event.repository.name }}
          NAMESPACE: ${{ github.event.inputs.namespace }}
          ALB_INSTANCES: ${{ vars.ALB_INSTANCES }}
          CI_REGISTRY: ${{ vars.CI_REGISTRY }}
          CERT_ARN: ${{ vars.CERT_ARN }}
          IMAGE_TAG: ${{ steps.short-sha.outputs.sha }}
          INSTALLED: ${{ github.event.inputs.deploy }}
          COMPONENT: ${{ github.event.inputs.component }}
          URL: ${{ github.event.inputs.url }}